version: "3"
dotenv: [".env"]
silent: true

vars:
  CHART_NAME: argo
  CLUSTER_NAME: "{{.CHART_NAME}}"
  PROJECT_NAMESPACE: "{{.CHART_NAME}}"
  CONTEXT_NAME: "k3d-{{.CLUSTER_NAME}}"
  KUBECTL: "kubectl --context={{.CONTEXT_NAME}}"

tasks:

  default:
    cmds:
    - task --list
  
  #  _    _____     _
  # | | _|___ /  __| |
  # | |/ / |_ \ / _` |
  # |   < ___) | (_| |
  # |_|\_\____/ \__,_|

  k3d:create:
    prefix: ⚙️ > create k3d cluster
    desc: create k3d cluster
    cmds:
    - |
      if [ "$(k3d cluster list | grep {{.CLUSTER_NAME}})" ]; then
        echo Cluster {{.CLUSTER_NAME}} already exists
      else
        k3d cluster create --config=k3d/config.yaml
      fi
  k3d:destroy:
    prefix: ⚙️ > destroy
    desc: destroy k3d cluster
    cmds:
      - "k3d cluster delete {{.CLUSTER_NAME}}"

  k3d:start:
    prefix: ⚙️ > start
    desc: starts k3d cluster
    cmds:
      - "k3d cluster start {{.CLUSTER_NAME}}"

  k3d:stop:
    prefix: ⚙️ > stop
    desc: stops k3d cluster
    cmds:
      - "k3d cluster stop {{.CLUSTER_NAME}}"

  #   __ _ _ __ __ _  ___
  #  / _` | '__/ _` |/ _ \
  # | (_| | | | (_| | (_) |
  #  \__,_|_|  \__, |\___/
  #            |___/

  argo:install:
    prefix: ⚙️ > argo install
    desc: install argo manifests
    cmds:
      - kubectl create ns argo
      - kubectl apply -n argo -f https://github.com/argoproj/argo-workflows/releases/download/v3.4.4/quick-start-postgres.yaml --context=k3d-{{.CLUSTER_NAME}}
  
  argo:delete:
    prefix: ⚙️ > argo delete
    desc: delete argo manifests
    cmds:
      - kubectl delete -n argo -f https://github.com/argoproj/argo-workflows/releases/download/v3.4.4/quick-start-postgres.yaml --context=k3d-{{.CLUSTER_NAME}}
      - kubectl delete ns argo
